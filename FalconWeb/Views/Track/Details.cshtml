@model FalconWeb.Models.Device

@{
    ViewBag.Title = "Track Vehicle";
}

<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false">
</script>
<script src="@Url.Content("~/Scripts/date.format.js")" type="text/javascript"></script> 

<h2>Track @Html.DisplayFor(model => model.Nickname) (@Html.DisplayFor(model => model.VehicleNumber))</h2>
<p id="infobox" style="float: left; width: 300px;">Updating...</p>
<p id="controlbox" style="float: right; width: 300px; text-align: right;">
<a id="disableEngine" href="#">Disable Engine</a> | 
<a id="enableEngine" href="#">Enable Engine</a><br />
<span id="commandStatus"></span>
</p>
<div id="map_canvas" style="width:100%; height:400px; clear: both;"></div>
<p>
    @Html.ActionLink("Back to List", "Index")
</p>

<script type="text/javascript">

    function sendCommand(command) {
        $("#commandStatus").text("Sending command...");
        $.ajax({
            url: '@Url.Action("SendCommand")',
            type: 'POST',
            data: {id: @(Model.ID), cmd: command},
            success: function(result) {
                $("#commandStatus").text("Command sent.");
            }
        });
    }

    $("#disableEngine").click(function() {
        if(confirm("Are you sure you want to DISABLE the engine? Click OK to cut off engine power."))
            sendCommand("disable");
        return false;
    });

    $("#enableEngine").click(function() {
        sendCommand("enable");
        return false;
    });

    $(document).ready(function () {
        
        var UpdateInfo = function(data) {
            var timestamp = new Date(parseInt(data.SatelliteTimeStamp.substr(6)) - (new Date()).getTimezoneOffset() * 60000); 
            var info = 'Last update: ' + timestamp.format("mmm d, yyyy h:MM:ss TT") + '<br>' +
                'Speed: ' + (Math.round(data.Speed * 100) / 100) + ' km/h<br>' +
                'Mileage: ' + (Math.round(data.Mileage * 100) / 100) + ' km<br>' +
                'Engine ' + (data.IOStatus.charAt(8) == '1' ? 'disabled' : 'enabled');
            $("#infobox").html(info);
        }

        @if (ViewBag.LastPosition != null) {
        <text>var current = new google.maps.LatLng(@ViewBag.LastPosition.Latitude, @ViewBag.LastPosition.Longitude);</text>
        } else {
        <text>var current = null; $("#infobox").text("No data available.");</text>
        }
        var mapOptions = {
            zoom: 14,
            center: current,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);
        var overlays = new Array();
        overlays.push(new google.maps.Marker({
            position: current,
            map: map,
            title: '@Model.Nickname'
        }));

        setInterval(function () {
            $.ajax({
                url: '@Url.Action("TrackingData")',
                type: 'POST',
                data: {id: @(Model.ID)},
                success: function(result) {
                    
                    for (var i in overlays) {
                        overlays[i].setMap(null);
                    }
                    overlays = new Array();

                    var marker = new google.maps.Marker({
                        position: new google.maps.LatLng(result[0].Latitude, result[0].Longitude),
                        map: map,
                        title: '@Model.Nickname'
                    });
                    overlays.push(marker);
                    
                    UpdateInfo(result[0]);

                    map.panTo(marker.getPosition());
                    
                    var coords = new Array();
                    for(var r in result) {
                        coords.push(new google.maps.LatLng(result[r].Latitude, result[r].Longitude));
                    }

                    var path = new google.maps.Polyline({
                        path: coords,
                        strokeColor: "#FF0000",
                        strokeOpacity: 0.5,
                        strokeWeight: 2
                    });
                    path.setMap(map);
                    overlays.push(path);
                }
            });
        }, 10000);
    });

</script>